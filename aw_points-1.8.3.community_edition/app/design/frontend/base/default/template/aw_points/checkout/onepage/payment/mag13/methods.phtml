<?php
/**
 * aheadWorks Co.
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the EULA
 * that is bundled with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://ecommerce.aheadworks.com/AW-LICENSE.txt
 *
 * =================================================================
 *                 MAGENTO EDITION USAGE NOTICE
 * =================================================================
 * This software is designed to work with Magento community edition and
 * its use on an edition other than specified is prohibited. aheadWorks does not
 * provide extension support in case of incorrect edition use.
 * =================================================================
 *
 * @category   AW
 * @package    AW_Points
 * @version    1.8.3
 * @copyright  Copyright (c) 2010-2012 aheadWorks Co. (http://www.aheadworks.com)
 * @license    http://ecommerce.aheadworks.com/AW-LICENSE.txt
 */
?><?php
$summaryForCustomer = $this->getSummaryForCustomer();
$textForPoints = Mage::helper('points/config')->getPointUnitName();
$defaultValue = Mage::app()->getRequest()->getParam('payment[points_amount]');
?>

<div class="payment-methods">
    <dl id="checkout-payment-method-load">
        <?php if ($this->pointsSectionAvailable()): ?>
            <dt>
            <input type="checkbox" name="payment[use_points]" id="use_points" checked="checked" />
            <label for="use_points"><?php echo $this->__('Use my %s', $textForPoints) ?></label>
            </dt>
            <dt>
            <input type="text" name="payment[points_amount]" value ="<?php echo $defaultValue; ?>" id="points_amount" onchange="pointsAmountChanged()" />
            <input type="hidden" name="base_grand_total" id="points_base_grand_total" value="<?php echo $this->getBaseGrandTotalInPointsToPay() ?>" disabled />
            <label for="points_amount"><?php echo Mage::helper('points')->__('of %s %s (%s) available', $summaryForCustomer->getPoints(), $textForPoints, $this->getMoneyForPoints()) ?></label>
            </dt>
        <?php endif; ?>
        <div id="checkout-payment-methods-container">
        <?php foreach ($this->getMethods() as $_method): $_code = $_method->getCode() ?>
            <dt>
            <?php if (sizeof($this->getMethods()) > 1): ?>
                <input id="p_method_<?php echo $_code ?>" value="<?php echo $_code ?>" type="radio" name="payment[method]" title="<?php echo $this->htmlEscape($_method->getTitle()) ?>" class="radio" onclick="payment.switchMethod('<?php echo $_code ?>')"<?php if ($this->getSelectedMethodCode() == $_code): ?> checked="checked"<?php endif; ?> />
            <?php else: ?>
                <span class="no-display"><input id="p_method_<?php echo $_code ?>" value="<?php echo $_code ?>" type="radio" name="payment[method]" checked="checked" /></span>
                <?php endif; ?>
            <label for="p_method_<?php echo $_code ?>"><?php echo $_method->getTitle() ?></label>
            </dt>
            <?php if ($html = $this->getChildHtml('payment.method.' . $_code)): ?>
                <dd>
                    <?php echo $html; ?>
                </dd>
            <?php endif; ?>
        <?php endforeach; ?>
        </div>
        <dt id="checkout-payment-method-free" style="display: none;">
            <?php $freePaymentMethod = $this->getFreePaymentMethod(); ?>
            <input id="p_method_<?php echo $freePaymentMethod->getCode() ?>" value="<?php echo $freePaymentMethod->getCode() ?>" type="hidden" name="payment[method]" disabled />
            <label><?php echo $this->getMethodTitle($freePaymentMethod) ?> <?php echo $this->getMethodLabelAfterHtml($freePaymentMethod) ?></label>
        </dt>
    </dl>
</div>
<script type="text/javascript">payment.init();</script>

<?php if ($this->pointsSectionAvailable()): ?>
    <script type="text/javascript">
        //<![CDATA[
        var customerPoints = <?php echo $summaryForCustomer->getPoints() ?>;
        var neededPoints = <?php echo $this->getNeededPoints() ?>;
        var limitedPoints = <?php echo $this->getLimitedPoints() ?>;

        $('use_points').disabled = $('points_amount').disabled = false;
        $('points_amount').value = Math.abs(Math.min(customerPoints, neededPoints, limitedPoints)).toFixed(0);

        var pointsAmountChanged = function () {
            var points_amount = $('points_amount').value;
            if (isNaN(points_amount)) points_amount = 0;
            points_amount = Math.min(Math.abs(points_amount), customerPoints, neededPoints, limitedPoints);
            $('points_amount').value = Math.abs(points_amount).toFixed(0);
        };

        Event.observe(window, 'load', function()
        {
            if (payment) {
                payment.copySave = payment.save;
                payment.anyPaymentMethodChecked = function () {
                    var methods = document.getElementsByName('payment[method]');
                    for (var i = 0; i < methods.length; i++) {
                        if (methods[i].checked) {
                            return true;
                        }
                    }
                    return false;
                };

                payment.save = function() {
                    var quoteBaseGrandTotalInPoints = <?php echo $this->getBaseGrandTotalInPoints() ?>;
                    if (quoteBaseGrandTotalInPoints > $('points_amount').value
                        && !payment.anyPaymentMethodChecked())      {
                        alert(Translator.translate('Please specify payment method.'));
                        return false;
                    } else  {
                        return payment.copySave();
                    }
                }
            }
        });
        //]]>
    </script>
<?php endif; ?>